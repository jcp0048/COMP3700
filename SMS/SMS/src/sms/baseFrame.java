/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sms;

import static java.lang.System.exit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rdl0011@gmail.com
 */
public class baseFrame extends javax.swing.JFrame {

    String url = "jdbc:mysql://localhost:3306/smsDB";
    String username = "root";
    String password = "admin";
  
    /**
     * Creates new form baseFrame
     */
    public baseFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dbInternalFrame = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        dbTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        view_all_items_button = new javax.swing.JButton();
        view_all_order_button = new javax.swing.JButton();
        view_item_button = new javax.swing.JButton();
        edit_item_button = new javax.swing.JButton();
        add_item_button = new javax.swing.JButton();
        view_order_button = new javax.swing.JButton();
        add_item_to_order_button = new javax.swing.JButton();
        create_order_button = new javax.swing.JButton();
        fill_and_close_order_button = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        view_sales_report_button = new javax.swing.JButton();
        add_associate_button = new javax.swing.JButton();
        view_all_associates_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Store Management System v1.2");

        dbInternalFrame.setVisible(true);

        jScrollPane2.setViewportView(dbTable);

        javax.swing.GroupLayout dbInternalFrameLayout = new javax.swing.GroupLayout(dbInternalFrame.getContentPane());
        dbInternalFrame.getContentPane().setLayout(dbInternalFrameLayout);
        dbInternalFrameLayout.setHorizontalGroup(
            dbInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
        );
        dbInternalFrameLayout.setVerticalGroup(
            dbInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
        );

        view_all_items_button.setText("View All Items");
        view_all_items_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_all_items_buttonActionPerformed(evt);
            }
        });

        view_all_order_button.setText("View All Orders");
        view_all_order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_all_order_buttonActionPerformed(evt);
            }
        });

        view_item_button.setText("View Item");
        view_item_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_item_buttonActionPerformed(evt);
            }
        });

        edit_item_button.setText("Edit Item");
        edit_item_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_item_buttonActionPerformed(evt);
            }
        });

        add_item_button.setText("Add Item");
        add_item_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_item_buttonActionPerformed(evt);
            }
        });

        view_order_button.setText("View Order Item List");
        view_order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_order_buttonActionPerformed(evt);
            }
        });

        add_item_to_order_button.setText("Add Item to Order");
        add_item_to_order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_item_to_order_buttonActionPerformed(evt);
            }
        });

        create_order_button.setText("Create Order");
        create_order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_order_buttonActionPerformed(evt);
            }
        });

        fill_and_close_order_button.setText("Fill & Close Order");
        fill_and_close_order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fill_and_close_order_buttonActionPerformed(evt);
            }
        });

        view_sales_report_button.setText("View Sales Report");
        view_sales_report_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_sales_report_buttonActionPerformed(evt);
            }
        });

        add_associate_button.setText("Add Associate");
        add_associate_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_associate_buttonActionPerformed(evt);
            }
        });

        view_all_associates_button.setText("View All Associates");
        view_all_associates_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_all_associates_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(add_associate_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(view_all_associates_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(create_order_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(add_item_to_order_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(view_order_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(add_item_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(edit_item_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(view_all_items_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(view_all_order_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(view_item_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(view_sales_report_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(fill_and_close_order_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(view_all_items_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(view_all_order_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(view_item_button)
                .addGap(11, 11, 11)
                .addComponent(edit_item_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(add_item_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(view_order_button)
                .addGap(11, 11, 11)
                .addComponent(add_item_to_order_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(create_order_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fill_and_close_order_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(view_sales_report_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(view_all_associates_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(add_associate_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dbInternalFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoutButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dbInternalFrame)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void resultSetToTableModel(ResultSet rs) throws SQLException{
        //Create new table model
        DefaultTableModel tableModel = new DefaultTableModel();

        //Retrieve meta data from ResultSet
        ResultSetMetaData metaData = rs.getMetaData();

        //Get number of columns from meta data
        int columnCount = metaData.getColumnCount();

        //Get all column names from meta data and add columns to table model
        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++){
            tableModel.addColumn(metaData.getColumnLabel(columnIndex));
        }

        //Create array of Objects with size of column count from meta data
        Object[] row = new Object[columnCount];

        //Scroll through result set
        while (rs.next()){
            //Get object from column with specific index of result set to array of objects
            for (int i = 0; i < columnCount; i++){
                row[i] = rs.getObject(i+1);
            }
            //Now add row to table model with that array of objects as an argument
            tableModel.addRow(row);
        }

        //Now add that table model to your table and you are done :D
        dbTable.setModel(tableModel);
    }
    
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        exit(1);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void fill_and_close_order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fill_and_close_order_buttonActionPerformed
       String orderNum = JOptionPane.showInputDialog("Enter Order Number");
        
        String sql = "SELECT * FROM ORDERS WHERE orderNum = " + orderNum;
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
            
            int n = JOptionPane.showConfirmDialog(null, "Do you wish to close thise order?");
            if(n == JOptionPane.YES_OPTION){
                
                sql = "DELETE FROM ItemLists WHERE (SELECT listNum FROM Orders WHERE orderNum = " + orderNum + ") = listNum";
                try (Connection conn = DriverManager.getConnection(url, username, password);
                    PreparedStatement stmt = conn.prepareStatement(sql)) {
                    stmt.execute();
                    } catch (Exception e) {e.printStackTrace();}
                
                sql = "UPDATE Orders SET listNum = NULL, dateFilled = CURDATE() WHERE orderNum = " + orderNum;
                try (Connection conn = DriverManager.getConnection(url, username, password);
                    PreparedStatement stmt = conn.prepareStatement(sql)) {
                    stmt.execute();
                    } catch (Exception e) {e.printStackTrace();}
            }
    }//GEN-LAST:event_fill_and_close_order_buttonActionPerformed

    private void view_all_order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_all_order_buttonActionPerformed
        String sql = "SELECT * FROM ORDERS";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_view_all_order_buttonActionPerformed

    private void view_sales_report_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_sales_report_buttonActionPerformed
       
    }//GEN-LAST:event_view_sales_report_buttonActionPerformed

    private void view_all_associates_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_all_associates_buttonActionPerformed
        String sql = "SELECT * FROM EMPLOYEES";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_view_all_associates_buttonActionPerformed

    private void view_all_items_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_all_items_buttonActionPerformed
            String sql = "SELECT * FROM ITEMS";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
            
            
    }//GEN-LAST:event_view_all_items_buttonActionPerformed

    private void view_item_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_item_buttonActionPerformed
        String itemID = JOptionPane.showInputDialog("Enter Item Number");
        
        String sql = "CALL view_item(" + itemID + ")";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_view_item_buttonActionPerformed

    private void edit_item_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_item_buttonActionPerformed
        String itemID = JOptionPane.showInputDialog("Enter Item Number");
        
        String sql = "CALL view_item(" + itemID + ")";
            
        try (Connection conn = DriverManager.getConnection(url, username, password);
        PreparedStatement stmt = conn.prepareStatement(sql)) {
        ResultSet res = stmt.executeQuery();
        resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
        
        String itemName = JOptionPane.showInputDialog("Enter Item Name");
        String qoh = JOptionPane.showInputDialog("Enter Quantity on Hand");
        String ppu = JOptionPane.showInputDialog("Enter Price per Unit");
        String providerName = JOptionPane.showInputDialog("Enter Provider Name");
        String providerEmail = JOptionPane.showInputDialog("Enter Provider Email");
        
        sql = "CALL edit_item(" + itemID + ", '" + itemName + "', " + qoh + ", " + 
                ppu + ", '" + providerName + "', '" + providerEmail +"')";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet executeQuery = stmt.executeQuery();
        } catch (Exception e) {e.printStackTrace();}
            
        sql = "CALL view_item(" + itemID + ")";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_edit_item_buttonActionPerformed

    private void add_item_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_item_buttonActionPerformed
        String itemName = JOptionPane.showInputDialog("Enter Item Name");
        String qoh = JOptionPane.showInputDialog("Enter Quantity on Hand");
        String ppu = JOptionPane.showInputDialog("Enter Price per Unit");
        String providerName = JOptionPane.showInputDialog("Enter Provider Name");
        String providerEmail = JOptionPane.showInputDialog("Enter Provider Email");
        
        String sql = "CALL add_item('" + itemName + "', " + qoh + ", " + 
                ppu + ", '" + providerName + "', '" + providerEmail +"')";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet executeQuery = stmt.executeQuery();
        } catch (Exception e) {e.printStackTrace();}
            
            sql = "SELECT * FROM ITEMS";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_add_item_buttonActionPerformed

    private void view_order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_order_buttonActionPerformed
        String orderNum = JOptionPane.showInputDialog("Enter Order Number");
        
        String sql = "SELECT * FROM ItemLists WHERE (SELECT listNum FROM Orders WHERE orderNum = " + orderNum + ") = listNum";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_view_order_buttonActionPerformed

    //SOMETHING ISN'T WORKING HERE FIX IT LATER
    private void add_item_to_order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_item_to_order_buttonActionPerformed
        String listNum = JOptionPane.showInputDialog("Enter List Number of Order");
        String itemNum = JOptionPane.showInputDialog("Enter Item Number");
        String quantity = JOptionPane.showInputDialog("Enter Item Quantity");
        
        String sql = "CALL add_item_to_order(" + listNum + ", " + itemNum + ", " + 
                quantity + ")";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            ResultSet res = stmt.executeQuery();
            resultSetToTableModel(res);
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_add_item_to_order_buttonActionPerformed

    private void create_order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_order_buttonActionPerformed
        String custName = JOptionPane.showInputDialog("Enter Customer Name");
        String custNum = JOptionPane.showInputDialog("Enter Contact Number");
        
        String sql = "CALL create_order('" + custName + "', '" + custNum + "')";
            
            try (Connection conn = DriverManager.getConnection(url, username, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.execute();
        } catch (Exception e) {e.printStackTrace();}
    }//GEN-LAST:event_create_order_buttonActionPerformed

    private void add_associate_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_associate_buttonActionPerformed
        String name = JOptionPane.showInputDialog("Enter  Name");
        String role = JOptionPane.showInputDialog("Enter Role (Manager/Associate)");
      
    }//GEN-LAST:event_add_associate_buttonActionPerformed

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_associate_button;
    private javax.swing.JButton add_item_button;
    private javax.swing.JButton add_item_to_order_button;
    private javax.swing.JButton create_order_button;
    private javax.swing.JInternalFrame dbInternalFrame;
    private javax.swing.JTable dbTable;
    private javax.swing.JButton edit_item_button;
    private javax.swing.JButton fill_and_close_order_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton view_all_associates_button;
    private javax.swing.JButton view_all_items_button;
    private javax.swing.JButton view_all_order_button;
    private javax.swing.JButton view_item_button;
    private javax.swing.JButton view_order_button;
    private javax.swing.JButton view_sales_report_button;
    // End of variables declaration//GEN-END:variables
}
