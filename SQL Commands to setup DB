/*NEW FOR ITERATION 2*/

CREATE TABLE Employees (
  employeeID int AUTO_INCREMENT ,
  name varchar(255),
  jobclass varchar(255),
  username varchar(255),
  password varchar(255),
  PRIMARY KEY(employeeID)
);

INSERT INTO Employees ()
   VALUES
 (1,'Manager','Manager','Manager','')
 (2,'Employee','Employee','Employee','');
 
 CREATE TABLE transactions(
   transactionID int AUTO_INCREMENT,
   itemName varchar(255),
   quantity int,
   cost float(10,2),
   sold date,
   PRIMARY KEY(transactionID)
   );

/*Create table commands */

CREATE TABLE Items (
  itemNum int AUTO_INCREMENT ,
  itemName varchar(255),
  QoH int,
  PPU float(10,2),
  providerName varchar(255),
  providerEmail varchar(255),
  PRIMARY KEY(itemNum)
);

INSERT INTO Items ()
   VALUES
   (1, 'Lettuce', 57, 1.50, 'Produce', 'Produce@publix.org'),
   (2, 'Spinach', 20, 2.50, 'Produce', 'Produce@publix.org'),
   (3, 'Chicken Breast', 178, 4.99, 'Meat', 'Meat@publix.org'),
   (4, 'Lean Ground Beef', 587, 5.99, 'Meat', 'Meat@publix.org'),
   (5, 'Canned Black Beans', 23, 0.59, 'Grocery', 'Grocery@publix.org');    

CREATE TABLE ItemLists (
  listNum int,
  itemNum int,
  itemQuantity int,
  subTotal float(10,2),
  PRIMARY KEY(listNum,itemNum),
  FOREIGN KEY (itemNum) REFERENCES Items(itemNum)
  );
    
INSERT INTO ItemLists ()
    VALUES
    (1, 1, 15, 22.50),
    (1, 2, 4, 10.00),
    (2, 1, 1, 1.50),
    (2, 2, 1, 2.50),
    (2, 3, 1, 4.99),
    (2, 4, 1, 5.99),
    (2, 5, 2, 1.18);
    
  
CREATE TABLE Orders (
    orderNum int AUTO_INCREMENT,
    total float(20,2) DEFAULT 0.00,
    customerName varchar(255),
    customerNum varchar(255),
    datePlaced date,
    dateFilled date,
    listNum int,
    PRIMARY KEY (orderNum)
    );
    
INSERT INTO Orders ()
      Values
      (1, 32.50, 'James', '706.331.4127', '2017-09-29', NULL, 1),
      (2, 78.50, 'Jack', '706.331.4128', '2017-09-17', '2017-09-20', NULL),
      (3, 16.16, 'John', '706.331.4129', '2017-09-25', NULL, 2),
      (4, 5.32, 'Josh', '706.331.4130', '2017-09-02', '2017-09-17', NULL),
      (5, 27.50, 'Jamie', '706.331.4131', '2017-09-18', '2017-09-19', NULL);
      
CREATE PROCEDURE view_item(IN vNum int)
BEGIN
  SELECT *
  FROM Items
  Where itemNum = vNum;
END;

CREATE PROCEDURE add_item(IN vName varchar(255),IN vQoH int, IN vPrice float(10,2), IN vProvName varchar(255), IN vProvEmail varchar(255))  
BEGIN
  INSERT INTO Items(itemName, QoH, PPU, providerName, providerEmail)
  VALUES (vName, vQoH, vPrice, vProvname, vProvemail);
END;

CREATE PROCEDURE edit_item(IN vNum int, IN vName varchar(255),IN vQoH int, IN vPrice float(10,2), IN vProvName varchar(255), IN vProvEmail varchar(255))
BEGIN
  UPDATE Items
  SET itemName = vName, QoH = vQoH, PPU = vPrice, providerName = vProvName, providerEmail = vProvEmail
  WHERE itemNum = vNum;
END;

CREATE PROCEDURE create_order(IN cName varchar(255), IN cNum varchar(255))
BEGIN
	INSERT INTO Orders(customerName, customerNum, datePlaced)
    Values(cName, cNum, CURDATE());
    
    UPDATE Orders
    SET listNum = ((SELECT MAX(listNum) FROM ItemLists) + 1)
    WHERE customerName = cName;
   
END;

CREATE PROCEDURE  add_item_to_order(IN lNum int, IN iNum int, IN iQuantity int)
BEGIN
    INSERT INTO ItemLists(listNum, itemNum, itemQuantity)
    VALUES(lnum, iNum, iQuantity);
    
    UPDATE ItemLists
    SET subTotal = (iQuantity*(SELECT PPU FROM Items WHERE itemNum = iNum))
    WHERE itemNum = iNum AND listNum = lNum;
           
    UPDATE Orders
    SET total=(total + (SELECT subTotal FROM ItemLists WHERE itemNum = iNum))
    WHERE listNum = lNum;   
END; 

